<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GateKeeper</name>
    </assembly>
    <members>
        <member name="T:GateKeeper.RbacServer">
            <summary>
            GateKeeper roles-based access control server.
            </summary>
        </member>
        <member name="F:GateKeeper.RbacServer.DefaultPermit">
            <summary>
            Specify the default response if no matching roles and permissions are found when authorizing a user's request.
            </summary>
        </member>
        <member name="M:GateKeeper.RbacServer.#ctor(System.String)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="dbFile">Database file.</param>
        </member>
        <member name="M:GateKeeper.RbacServer.Authorize(System.String,System.String,System.String)">
            <summary>
            Authorize a user's request against a resource by operation type.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="resource">The resource.</param>
            <param name="operation">The type of operation.</param>
            <returns>True if authorized.</returns>
        </member>
        <member name="M:GateKeeper.RbacServer.AddUserToRole(System.String,System.String)">
            <summary>
            Add a user to a specified role.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="rolename">The name of the role.</param>
        </member>
        <member name="M:GateKeeper.RbacServer.AddRolePermission(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Add a role with a specific permission, or add permission to an existing role.
            </summary>
            <param name="rolename">The name of the role.</param>
            <param name="resource">The resource.</param>
            <param name="operation">The type of operation.</param>
            <param name="allow">Permit (true) or deny (false).</param>
        </member>
        <member name="M:GateKeeper.RbacServer.RemoveUser(System.String)">
            <summary>
            Remove a user.
            </summary>
            <param name="username">The name of the user.</param>
        </member>
        <member name="M:GateKeeper.RbacServer.RemoveUserRole(System.String,System.String)">
            <summary>
            Remove a user's mapping to a role.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="rolename">The name of the role.</param>
        </member>
        <member name="M:GateKeeper.RbacServer.RemoveRole(System.String)">
            <summary>
            Remove a role.
            </summary>
            <param name="rolename">The name of the role.</param>
        </member>
        <member name="M:GateKeeper.RbacServer.RemoveRolePermission(System.String,System.String,System.String)">
            <summary>
            Remove a permission entry from a role.
            </summary>
            <param name="rolename">The name of the role.</param>
            <param name="resource">The resource.</param>
            <param name="operation">The type of operation.</param>
        </member>
        <member name="M:GateKeeper.RbacServer.UserExists(System.String)">
            <summary>
            Determine if a user exists.
            </summary>
            <param name="username">The name of the user.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:GateKeeper.RbacServer.RoleExists(System.String)">
            <summary>
            Determine if a role exists.
            </summary>
            <param name="rolename">The name of the role.</param>
            <returns>True if exists.</returns>
        </member>
        <member name="M:GateKeeper.RbacServer.UserRoleExists(System.String,System.String)">
            <summary>
            Determine if a user is mapped to a role.
            </summary>
            <param name="username">The name of the user.</param>
            <param name="rolename">The name of the role.</param>
            <returns>True if the user is mapped to the role.</returns>
        </member>
        <member name="M:GateKeeper.RbacServer.RolePermissionExists(System.String,System.String,System.String)">
            <summary>
            Determine if a role has permissions defined to access a specified resource using a specific operation.
            </summary>
            <param name="rolename">The name of the role.</param>
            <param name="resource">The resource.</param>
            <param name="operation">The type of operation.</param>
            <returns>True if the role has permissions defined for the specified resource and specified operation.</returns>
        </member>
        <member name="M:GateKeeper.RbacServer.GetUserRoles(System.String)">
            <summary>
            Retrieve the list of role names to which the user is assigned.
            </summary>
            <param name="username">The name of the user.</param>
            <returns>List of role names.</returns>
        </member>
        <member name="M:GateKeeper.RbacServer.GetRolePermissions(System.String)">
            <summary>
            Retrieve the list of permissions assigned to a role.
            </summary>
            <param name="rolename">The name of the role.</param>
            <returns>List of role permissions.</returns>
        </member>
        <member name="T:GateKeeper.RolePermission">
            <summary>
            Assignment of permissions to a role by name, for a specified resource and a specified operation.
            </summary>
        </member>
        <member name="P:GateKeeper.RolePermission.Id">
            <summary>
            Database row ID.
            </summary>
        </member>
        <member name="P:GateKeeper.RolePermission.Rolename">
            <summary>
            Role name.
            </summary>
        </member>
        <member name="P:GateKeeper.RolePermission.Resource">
            <summary>
            Resource name.
            </summary>
        </member>
        <member name="P:GateKeeper.RolePermission.Operation">
            <summary>
            Operation.
            </summary>
        </member>
        <member name="P:GateKeeper.RolePermission.Allow">
            <summary>
            True if the operation is allowed.
            </summary>
        </member>
        <member name="M:GateKeeper.RolePermission.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="M:GateKeeper.RolePermission.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="rolename">Role name.</param>
            <param name="resource">Resource name.</param>
            <param name="operation">Operation.</param>
            <param name="allow">True if the operation is allowed.</param>
        </member>
        <member name="T:GateKeeper.UserRole">
            <summary>
            User mapping to a given role.
            </summary>
        </member>
        <member name="P:GateKeeper.UserRole.Id">
            <summary>
            Database row ID.
            </summary>
        </member>
        <member name="P:GateKeeper.UserRole.Username">
            <summary>
            User name.
            </summary>
        </member>
        <member name="P:GateKeeper.UserRole.Rolename">
            <summary>
            Role name.
            </summary>
        </member>
        <member name="M:GateKeeper.UserRole.#ctor">
            <summary>
            Instantiate the object.
            </summary>
        </member>
        <member name="M:GateKeeper.UserRole.#ctor(System.String,System.String)">
            <summary>
            Instantiate the object.
            </summary>
            <param name="username">User name.</param>
            <param name="rolename">Role name.</param>
        </member>
    </members>
</doc>
